{% if Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_IPAddress != '' -%}
    {% assign ip_addr = Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_IPAddress | split: ',' %}
    {%- assign ipaddr_v4 = Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_IPAddress | regex_matches: '(\d{1,3}\.){3}\d{1,3}' %}
    {%- assign ipaddr_v6 = Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_IPAddress | regex_matches: '(?<!\.)(?<!\.\d{1})(?<!\.\d{2})[\w:%]+(?!\d*\.)' -%}
  {% endif -%}
  {% if Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_IPSubnet != '' -%}
    {%- assign netmask = Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_IPSubnet | split: ',' %}
  {%- endif -%}
  {%- assign mac_block = Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_MACAddress | slice: 0, 8 -%}
  {% case mac_block %}
    {% when "00-0D-3A" %}
       {%- assign nic_manufacturer = '0e8b8e650a0a0b3b004f285ffbb1a4fc' -%} {% comment %} Microsoft {% endcomment -%}
    {% else %}
  {% endcase -%}
  {
    "items": [
      {
        "className": "cmdb_ci_win_server",
        "internal_id": "windows_server",
        "lookup": [],
        "values": {
          "name": "{{ Microsoft-Windows-Computer_NetbiosComputerName }}",
          "correlation_id": "{{ Microsoft-Windows-Computer_ObjectId }}"
        }
      },
      {
        "className": "cmdb_ci_network_adapter",
        "internal_id": "windows_nic",
        "lookup": [],
        "values": {
  {%- if ipaddr_v4 and netmask %}
          "ip_address": "{{ ipaddr_v4[0] }}",
          "netmask": "{{ netmask[0] }}",
  {%- elseif ipaddr_v6 %}
          "ip_address": "{{ ipaddr_v6[0] }}",
  {%- endif %}
          "ip_default_gateway": "{{ Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-NetworkAdapter_DefaultIPGateway }}",
          "dhcp_enabled": "{{ Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_DHCPEnabled }}",
          "mac_manufacturer": "{{ Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_Manufacturer }}",
          "dns_domain": "{{ Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_DNSDomain }}",
          "model_id": "{{ Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-NetworkAdapter_ProductName }}",
          "short_description": "NIC Manufacturer: {{ Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_Manufacturer }} MAC: {{ Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_MACAddress }} Display Name: {{ Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-LogicalDevice_Name }} 
  {%- if Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_DHCPEnabled %} IP issued from DHCP Server: {{ Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_DHCPServer }}{%- endif -%}",
          "mac_address": "{{ Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_MACAddress }}",
  {%- if nic_manufacturer %}
          "mac_manufacturer": "{{nic_manufacturer}}",
  {%- endif %}
          "name": "{{ Microsoft-Windows-Server-10-0-NetworkAdapter_Microsoft-Windows-Server-NetworkAdapter_ServiceName }}",
          "correlation_id": "{{ Microsoft-Windows-Server-10-0-NetworkAdapter_ObjectId }}"
        }
      }
  {%- assign i = 0 -%}
  {% for addr in ipaddr_v4 -%}
      ,
      {
        "className": "cmdb_ci_ip_address",
        "internal_id": "ip_addr{{ i }}",
        "lookup": [],
        "values": {
          "ip_version": 4,
          "ip_address": "{{ addr }}",
          "netmask": "{{ netmask | slice: i }}"
        }
      }
    {%- assign i = i | plus: 1 %}
  {%- endfor %}
  {%- comment %}
    Ipv6 netmask is contained in the 4th grouping of numbers (bits 49-64).
    ServiceNow allows a null netmask to indicate this.
    Handle this after IPv4 to make it easier to marry up v4 addresses with their netmasks.
  {%- endcomment %}
  {%- for addr in ipaddr_v6 -%}
      ,
      {
        "className": "cmdb_ci_ip_address",
        "internal_id": "ip_addr{{ i }}",
        "lookup": [],
        "values": {
          "ip_version": 6,
          "ip_address": "{{ addr }}",
          "netmask": null
        }
      }
    {%- assign i = i | plus: 1 -%}
  {%- endfor %}
    ],
    "relations": [
      {
        "type": "Owns::Owned by",
        "parent": 0,
        "child": 1
      }
  {%- comment %} Increase limit and start loop at 2 to account for nic and server {%- endcomment %}
  {%- assign limit = ip_addr.size | plus: 1 %}
  {%- for i in (2..limit) -%}
      ,
      {
        "type": "Owns::Owned by",
        "parent": 0,
        "child": {{ i }}
      }
  {%- endfor %}
    ],
    "referenceItems": [
      {
        "referenced": "windows_server",
        "referencedBy": "windows_nic",
        "referenceField": "cmdb_ci"
      }
  {%- comment %} Decrease limit to account for starting at 0 {%- endcomment %}
  {%- assign limit = ip_addr.size | minus: 1 %}
  {%- for i in (0..limit) -%}
      ,
      {
        "referenced": "windows_nic",
        "referencedBy": "ip_addr{{ i }}",
        "referenceField": "nic"
      }
  {%- endfor %}
    ]
  }
  